# -*- coding: utf-8 -*-
"""matplotlib_project2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V7ScLKDBHSOBxBk1II5Myr3nDxGX3Ero
"""

#install datasets library
#!pip install datasets

#import libraries
import pandas as pd
from datasets import load_dataset
import matplotlib.pyplot  as plt

#loading data
dataset=load_dataset('lukebarousse/data_jobs')
df=dataset['train'].to_pandas()

#data cleanup
df["job_posted_date"]=pd.to_datetime(df["job_posted_date"])

!pip install --upgrade huggingface_hub

!pip install --upgrade datasets

df["job_posted_date"] = pd.to_datetime(df["job_posted_date"])

df.job_posted_date

df.job_posted_date.value_counts() #hangi zaman da kaç tane iş ilanı yapılmış.Her bir tarihin kaç kez tekrarlandığını gösterir.
#value.counts benzersiz tarihlerdeki değerleri saymak için kullanılır.

job_counts_bydate=df.job_posted_date.value_counts().sort_index()#zaman sırayla olması gerektiği için zaman değerini  en geç ten en erkene doğru sıralıyorum.

job_counts_bydate.head()#ilk 5 değeri getirmek için

job_counts_bydate.tail(10)#son değerleri getirmek için

#hesaplanılan tarih ve sayı değerlerine göre bi tane çizgi grafik oluşturmamız lazım.

plt.plot(job_counts_bydate.index,job_counts_bydate.values)
#grafiğe bi başlık eklemek için
plt.title("Zamana göre yayınlanan iş sayısı")
#x eksenine ve y eksenine etiketler koyalım grafiğin  okunabilirliğini arttırmak amaçlı
plt.xlabel("iş ilanı tarihleri")
plt.ylabel("İş ilanı sayısı")

df["job_posted_month"]=df["job_posted_date"].dt.month

df

monthly_counts=df.job_posted_month.value_counts()
monthly_counts=monthly_counts.sort_index()
monthly_counts

plt.plot(monthly_counts.index,monthly_counts)

series=pd.Series([10,20,30,40,50],index=["a","b","c","d","e"])

series.index

series.values

job_counts=df.job_title_short.value_counts()

plt.bar(job_counts.index,job_counts.values)#job_counts.values=job_counts
plt.title("posting by job title")
plt.show()

plt.bar(job_counts.index,job_counts.values)#kodun okunabilirliğini arttırmak için bar sütununa çeviriyoruz.
plt.title("Posting By Job Title")
plt.ylabel("Count Of Job Postings")
#x eksenindeki verilerin iç içe geçmesini enellemek için
plt.xticks(rotation=45,ha="right")#verilerin birbirlerinin üzerinde binmemesi için 45 derecelik bir açıyla döner
plt.show()

job_counts.plot(kind="line")

job_counts.plot(kind="bar")#bu kod gösterioyr ki bir pandas serisinin  görselleştirme yeteneği de vardır.
plt.title("Posting By Job Title")
plt.ylabel("Count Of Job Postings")
plt.xlabel("Job Title")
#x eksenindeki verilerin iç içe geçmesini enellemek için
plt.xticks(rotation=45,ha="right")#verilerin birbirlerinin üzerinde binmemesi için 45 derecelik bir açıyla döner
plt.show()

df

"""**Median Salary vs Data Science Jobs**

"""

job_salary=df.groupby("job_title_short")["salary_year_avg"].median().sort_values()

job_salary.plot(kind="barh")
plt.xlabel("Salary ($USD)")
plt.ylabel("")
plt.title("Median  Salary by Job Title")
plt.show()

